version: '3.8'

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-youruser}
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  mysql:
    image: mariadb:10.6
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  php:
    image: php:8.2-fpm-alpine
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-youruser}
    volumes:
      - ./:/var/www/html:delegated
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  composer:
    image: composer:latest
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-youruser}
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-youruser}
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  npm:
    image: node:13.7
    volumes:
      - ./:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  artisan:
    image: php:8.2-fpm-alpine
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-youruser}
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel
    deploy:
      restart_policy:
        condition: any
